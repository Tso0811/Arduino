#include <SoftwareSerial.h>
#include <Ultrasonic.h>
int spd = 60;               // 一般速度
int spdup = 120;            // 加速速度
int timer = 1000;           
SoftwareSerial BT(13,12);   // 接收腳(RX), 傳送腳(TX)
char command;
Ultrasonic ultrasonic(3,2); //ultrasonic(trig, echo);
int  distance;
const int IN1 = 4;          //L298N IN1 pin 
const int IN2 = 5;          //L298N IN2 pin 
const int IN3 = 6;          //L298N IN3 pin
const int IN4 = 7;          //L298N IN4 pin 
const int EA = 2;
const int EB = 3;

const byte irDl=9;//左(left)紅外線循跡模組。
const byte irD2=10;//中(center)紅外線循跡模組。
const byte irD3=8;//右(right)紅外線循跡模組。




void setup() 
{  
  Serial.begin(9600);     //胞率 9600 
  pinMode(irDl,INPUT);
  pinMode(irD2,INPUT);
  pinMode(irD3,INPUT);
  pinMode(4,OUTPUT);        
  pinMode(5,OUTPUT); 
  pinMode(6,OUTPUT);  
  pinMode(7,OUTPUT); 
  pinMode(EA,OUTPUT);
  pinMode(EB,OUTPUT); 
  analogWrite(EA,130);
  analogWrite(EB,130);

  delay(500);    
  BT.begin(9600); 
}

void loop() 
{       
  Serial.println(digitalRead(9));  //左
  Serial.println(digitalRead(10));  //中
  Serial.println(digitalRead(8));  //右 //碰白變1
  
  delay(1000);   

  if (digitalRead(9) == 1 && digitalRead(8) == 1 && digitalRead(10) == 0 ){
    Forward();
    delay(1000);   
    Stop();
    while(digitalRead(9) == 1 && digitalRead(8) == 1 && digitalRead(10) == 1){
      Back();
      delay(500);
      Stop();
    }
  }

  if (digitalRead(9) == 0 && digitalRead(8) == 1 && digitalRead(10) == 1 ){
    Right();
    delay(1000);   
    Stop();
    while(digitalRead(9) == 1 && digitalRead(8) == 1 && digitalRead(10) == 1){
      Back();
      delay(500);
      Stop();
    }
  }

  if (digitalRead(9) == 1 && digitalRead(8) == 0 && digitalRead(10) == 1 ){
    Left();
    delay(1000);   
    Stop();
    while(digitalRead(9) == 1 && digitalRead(8) == 1 && digitalRead(10) == 1){
      Back();
      delay(500);
      Stop();
    }
  }
  
  
  
  

}      
     
void Forward(void)          //車子前進副程式
{
    digitalWrite(IN1, LOW);
    digitalWrite(IN2, EA);
    digitalWrite(IN3, LOW);
    digitalWrite(IN4, EB);	
} 

void Back(void)              //車子後退副程式
{
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, HIGH);
  digitalWrite(IN4, LOW);	
} 

void Stop(void)              //車子停止副程式
{
  analogWrite(IN1, 0);
  analogWrite(IN2, 0);
  analogWrite(IN3, 0);
  analogWrite(IN4, 0);
}

void Left(void)              //車子左轉副程式
{
  analogWrite(IN1, spd);  
  digitalWrite(IN2, HIGH);  
  analogWrite(IN3, spd);  
  digitalWrite(IN4, LOW);
}
void Right(void)             //車子右轉副程式
{
  analogWrite(IN1, spd);
  digitalWrite(IN2, LOW);
  analogWrite(IN3, spd);
  digitalWrite(IN4, HIGH);
 
} 

void SpeedUP(void)           //車子加速副程式
{
  analogWrite(IN1, spdup);
  analogWrite(IN2, 0);
  analogWrite(IN3, spdup);
  analogWrite(IN4, 0);
}
