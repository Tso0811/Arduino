#include <SoftwareSerial.h>
int spd = 80;               // 一般速度
int spdup = 120;            // 加速速度
int timer = 1000;           
SoftwareSerial BT(13,12);   // 接收腳(RX), 傳送腳(TX)
char command;

const int IN1 = 4;          //L298N IN1 pin 
const int IN2 = 5;          //L298N IN2 pin 
const int IN3 = 6;          //L298N IN3 pin
const int IN4 = 7;          //L298N IN4 pin 

void setup() 
{
  Serial.begin(9600);     //胞率 9600 
  pinMode(4,OUTPUT);      
  pinMode(5,OUTPUT);
  pinMode(6,OUTPUT);
  pinMode(7,OUTPUT);
  delay(500);  
  BT.begin(9600); 
}

void loop() {     
  if (BT.available() > 0) {
    command = BT.read();

    switch (command) {
      case 'W':           //讀取到W執行加速副程式
        SpeedUP();
        break; 
      case 'f' :          //讀取到F or f執行前進副程式
      case 'F' :
        Forward();
        break;
      case 'b' :          //讀取到B or b執行後退副程式
      case 'B' :
        Back();
        break;
      case 'l' :          //讀取到L or l執行左轉副程式
      case 'L' :
        Left();
        break;
      case 'r' :          //讀取到R or r執行右轉副程式
      case 'R' :
        Right();
        break;
      case 's' :          //讀取到S or s執行停止副程式
      case 'S' :
        Stop();
        break;
      }
      }
}

void Forward(void)          //車子前進副程式
{
  analogWrite(IN1, spd);
  analogWrite(IN2, 0);
  analogWrite(IN3, spd);
  analogWrite(IN4, 0);
} 

void Back(void)              //車子後退副程式
{
  analogWrite(IN1, 0);
  analogWrite(IN2, spd);
  analogWrite(IN3,0 );
  analogWrite(IN4, spd);
} 

void Stop(void)              //車子停止副程式
{
  analogWrite(IN1, 0);
  analogWrite(IN2, 0);
  analogWrite(IN3, 0);
  analogWrite(IN4, 0);
}

void Left(void)              //車子左轉副程式
{
  analogWrite(IN1, spd);
  analogWrite(IN2, 0);
  analogWrite(IN3, 0);
  analogWrite(IN4, 0);
} 

void Right(void)             //車子右轉副程式
{
  analogWrite(IN1, 0);
  analogWrite(IN2, 0);
  analogWrite(IN3, spd);
  analogWrite(IN4, 0);
} 

void SpeedUP(void)           //車子加速副程式
{
  analogWrite(IN1, spdup);
  analogWrite(IN2, 0);
  analogWrite(IN3, spdup);
  analogWrite(IN4, 0);
}
